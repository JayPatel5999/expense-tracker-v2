{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jay\\\\learn\\\\Expense-Tracker\\\\expense-tracker\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useContext, createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\nconst GlobalContext = /*#__PURE__*/createContext();\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Income Functions\n  const addIncome = async income => {\n    const response = await axios.post(`${BASE_URL}add-income`, income).catch(err => {\n      setError(err.response.data.message);\n    });\n    getIncome();\n  };\n  const getIncome = async () => {\n    const response = await axios.get(`${BASE_URL}get-incomes`);\n    setIncomes(response.data);\n  };\n  const deleteIncome = async id => {\n    const response = await axios.delete(`${BASE_URL}delete-income/${id}`).catch(err => {\n      setError(err.response.data.message);\n    });\n    getIncome();\n  };\n  const totalIncome = () => {\n    let totalIncome = 0;\n    incomes.forEach(income => {\n      totalIncome = totalIncome + income.amount;\n    });\n    return totalIncome;\n  };\n\n  // Expense Functions\n  const addExpense = async expense => {\n    const response = await axios.post(`${BASE_URL}add-expense`, expense).catch(err => {\n      setError(err.response.data.message);\n    });\n    getExpenses();\n  };\n  const getExpenses = async () => {\n    const response = await axios.get(`${BASE_URL}get-expenses`);\n    setExpenses(response.data);\n  };\n  const deleteExpense = async id => {\n    const response = await axios.delete(`${BASE_URL}delete-expense/${id}`).catch(err => {\n      setError(err.response.data.message);\n    });\n    getExpenses();\n  };\n  const totalExpense = () => {\n    let totalExpense = 0;\n    expenses.forEach(expense => {\n      totalExpense = totalExpense + expense.amount;\n    });\n    return totalExpense;\n  };\n\n  //Total Final Amount\n  const totalBalance = () => {\n    return totalIncome() - totalExpense();\n  };\n\n  //Transaction Functions\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history;\n  };\n\n  // Load data when component mounts\n  useEffect(() => {\n    getIncome();\n    getExpenses();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncome,\n      deleteIncome,\n      totalIncome,\n      incomes,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpense,\n      totalBalance,\n      expenses,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 3\n  }, this);\n};\n_s(GlobalProvider, \"C5hJzJWvNypkpmTtlsf8SGGGlns=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["useContext","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","BASE_URL","GlobalContext","GlobalProvider","children","_s","incomes","setIncomes","expenses","setExpenses","error","setError","addIncome","income","response","post","catch","err","data","message","getIncome","get","deleteIncome","id","delete","totalIncome","forEach","amount","addExpense","expense","getExpenses","deleteExpense","totalExpense","totalBalance","transactionHistory","history","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["C:/Users/Jay/learn/Expense-Tracker/expense-tracker/src/context/globalContext.js"],"sourcesContent":["import { useContext, createContext, useState, useEffect } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/v1/\"\r\n\r\nconst GlobalContext = createContext()\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n\tconst [incomes, setIncomes] = useState([])\r\n\tconst [expenses, setExpenses] = useState([])\r\n\tconst [error, setError] = useState(null)\r\n\r\n\t// Income Functions\r\n\tconst addIncome = async (income) => {\r\n\t\tconst response = await axios\r\n\t\t\t.post(`${BASE_URL}add-income`, income)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tsetError(err.response.data.message)\r\n\t\t\t})\r\n\t\tgetIncome()\r\n\t}\r\n\r\n\tconst getIncome = async () => {\r\n\t\tconst response = await axios.get(`${BASE_URL}get-incomes`)\r\n\t\tsetIncomes(response.data)\r\n\t}\r\n\r\n\tconst deleteIncome = async (id) => {\r\n\t\tconst response = await axios\r\n\t\t\t.delete(`${BASE_URL}delete-income/${id}`)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tsetError(err.response.data.message)\r\n\t\t\t})\r\n\t\tgetIncome()\r\n\t}\r\n\r\n\tconst totalIncome = () => {\r\n\t\tlet totalIncome = 0\r\n\t\tincomes.forEach((income) => {\r\n\t\t\ttotalIncome = totalIncome + income.amount\r\n\t\t})\r\n\t\treturn totalIncome\r\n\t}\r\n\r\n\t// Expense Functions\r\n\tconst addExpense = async (expense) => {\r\n\t\tconst response = await axios\r\n\t\t\t.post(`${BASE_URL}add-expense`, expense)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tsetError(err.response.data.message)\r\n\t\t\t})\r\n\t\tgetExpenses()\r\n\t}\r\n\r\n\tconst getExpenses = async () => {\r\n\t\tconst response = await axios.get(`${BASE_URL}get-expenses`)\r\n\t\tsetExpenses(response.data)\r\n\t}\r\n\r\n\tconst deleteExpense = async (id) => {\r\n\t\tconst response = await axios\r\n\t\t\t.delete(`${BASE_URL}delete-expense/${id}`)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tsetError(err.response.data.message)\r\n\t\t\t})\r\n\t\tgetExpenses()\r\n\t}\r\n\r\n\tconst totalExpense = () => {\r\n\t\tlet totalExpense = 0\r\n\t\texpenses.forEach((expense) => {\r\n\t\t\ttotalExpense = totalExpense + expense.amount\r\n\t\t})\r\n\t\treturn totalExpense\r\n\t}\r\n\r\n\t//Total Final Amount\r\n\tconst totalBalance = () => {\r\n\t\treturn totalIncome() - totalExpense()\r\n\t}\r\n\r\n\t//Transaction Functions\r\n\tconst transactionHistory = () => {\r\n\t\tconst history = [...incomes, ...expenses]\r\n\t\thistory\r\n\t}\r\n\r\n\t// Load data when component mounts\r\n\tuseEffect(() => {\r\n\t\tgetIncome()\r\n\t\tgetExpenses()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<GlobalContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\taddIncome,\r\n\t\t\t\tgetIncome,\r\n\t\t\t\tdeleteIncome,\r\n\t\t\t\ttotalIncome,\r\n\t\t\t\tincomes,\r\n\t\t\t\taddExpense,\r\n\t\t\t\tgetExpenses,\r\n\t\t\t\tdeleteExpense,\r\n\t\t\t\ttotalExpense,\r\n\t\t\t\ttotalBalance,\r\n\t\t\t\texpenses,\r\n\t\t\t\terror,\r\n\t\t\t}}>\r\n\t\t\t{children}\r\n\t\t</GlobalContext.Provider>\r\n\t)\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n\treturn useContext(GlobalContext)\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}